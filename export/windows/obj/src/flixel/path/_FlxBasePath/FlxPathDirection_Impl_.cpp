// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_path__FlxBasePath_FlxPathDirection_Impl_
#include <flixel/path/_FlxBasePath/FlxPathDirection_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_83eb80b5c05f13cd_446_toInt,"flixel.path._FlxBasePath.FlxPathDirection_Impl_","toInt",0x218afc9c,"flixel.path._FlxBasePath.FlxPathDirection_Impl_.toInt","flixel/path/FlxBasePath.hx",446,0xefb220ed)
HX_LOCAL_STACK_FRAME(_hx_pos_83eb80b5c05f13cd_439_boot,"flixel.path._FlxBasePath.FlxPathDirection_Impl_","boot",0xc0980aca,"flixel.path._FlxBasePath.FlxPathDirection_Impl_.boot","flixel/path/FlxBasePath.hx",439,0xefb220ed)
HX_LOCAL_STACK_FRAME(_hx_pos_83eb80b5c05f13cd_442_boot,"flixel.path._FlxBasePath.FlxPathDirection_Impl_","boot",0xc0980aca,"flixel.path._FlxBasePath.FlxPathDirection_Impl_.boot","flixel/path/FlxBasePath.hx",442,0xefb220ed)
namespace flixel{
namespace path{
namespace _FlxBasePath{

void FlxPathDirection_Impl__obj::__construct() { }

Dynamic FlxPathDirection_Impl__obj::__CreateEmpty() { return new FlxPathDirection_Impl__obj; }

void *FlxPathDirection_Impl__obj::_hx_vtable = 0;

Dynamic FlxPathDirection_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxPathDirection_Impl__obj > _hx_result = new FlxPathDirection_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxPathDirection_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7a288f52;
}

bool FlxPathDirection_Impl__obj::FORWARD;

bool FlxPathDirection_Impl__obj::BACKWARD;

int FlxPathDirection_Impl__obj::toInt(bool this1){
            	HX_STACKFRAME(&_hx_pos_83eb80b5c05f13cd_446_toInt)
HXDLIN( 446)		if (this1) {
HXDLIN( 446)			return 1;
            		}
            		else {
HXDLIN( 446)			return -1;
            		}
HXDLIN( 446)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxPathDirection_Impl__obj,toInt,return )


FlxPathDirection_Impl__obj::FlxPathDirection_Impl__obj()
{
}

bool FlxPathDirection_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxPathDirection_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo FlxPathDirection_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsBool,(void *) &FlxPathDirection_Impl__obj::FORWARD,HX_("FORWARD",a5,b5,9e,65)},
	{::hx::fsBool,(void *) &FlxPathDirection_Impl__obj::BACKWARD,HX_("BACKWARD",e3,6b,9e,80)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void FlxPathDirection_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxPathDirection_Impl__obj::FORWARD,"FORWARD");
	HX_MARK_MEMBER_NAME(FlxPathDirection_Impl__obj::BACKWARD,"BACKWARD");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxPathDirection_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxPathDirection_Impl__obj::FORWARD,"FORWARD");
	HX_VISIT_MEMBER_NAME(FlxPathDirection_Impl__obj::BACKWARD,"BACKWARD");
};

#endif

::hx::Class FlxPathDirection_Impl__obj::__mClass;

static ::String FlxPathDirection_Impl__obj_sStaticFields[] = {
	HX_("FORWARD",a5,b5,9e,65),
	HX_("BACKWARD",e3,6b,9e,80),
	HX_("toInt",34,be,11,14),
	::String(null())
};

void FlxPathDirection_Impl__obj::__register()
{
	FlxPathDirection_Impl__obj _hx_dummy;
	FlxPathDirection_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.path._FlxBasePath.FlxPathDirection_Impl_",d6,60,d5,cb);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxPathDirection_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxPathDirection_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxPathDirection_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxPathDirection_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxPathDirection_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxPathDirection_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxPathDirection_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxPathDirection_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_83eb80b5c05f13cd_439_boot)
HXDLIN( 439)		FORWARD = true;
            	}
{
            	HX_STACKFRAME(&_hx_pos_83eb80b5c05f13cd_442_boot)
HXDLIN( 442)		BACKWARD = false;
            	}
}

} // end namespace flixel
} // end namespace path
} // end namespace _FlxBasePath
