// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_util_LoadFailureType
#include <flixel/util/LoadFailureType.h>
#endif
#ifndef INCLUDED_flixel_util_LoadResult
#include <flixel/util/LoadResult.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_net_SharedObject
#include <openfl/net/SharedObject.h>
#endif
namespace flixel{
namespace util{

::flixel::util::LoadResult LoadResult_obj::FAILURE( ::flixel::util::LoadFailureType type, ::openfl::net::SharedObject obj)
{
	return ::hx::CreateEnum< LoadResult_obj >(HX_("FAILURE",2a,44,ce,96),1,2)->_hx_init(0,type)->_hx_init(1,obj);
}

::flixel::util::LoadResult LoadResult_obj::SUCCESS( ::openfl::net::SharedObject obj)
{
	return ::hx::CreateEnum< LoadResult_obj >(HX_("SUCCESS",a3,f9,21,38),0,1)->_hx_init(0,obj);
}

bool LoadResult_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FAILURE",2a,44,ce,96)) { outValue = LoadResult_obj::FAILURE_dyn(); return true; }
	if (inName==HX_("SUCCESS",a3,f9,21,38)) { outValue = LoadResult_obj::SUCCESS_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(LoadResult_obj)

int LoadResult_obj::__FindIndex(::String inName)
{
	if (inName==HX_("FAILURE",2a,44,ce,96)) return 1;
	if (inName==HX_("SUCCESS",a3,f9,21,38)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC2(LoadResult_obj,FAILURE,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LoadResult_obj,SUCCESS,return)

int LoadResult_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("FAILURE",2a,44,ce,96)) return 2;
	if (inName==HX_("SUCCESS",a3,f9,21,38)) return 1;
	return super::__FindArgCount(inName);
}

::hx::Val LoadResult_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FAILURE",2a,44,ce,96)) return FAILURE_dyn();
	if (inName==HX_("SUCCESS",a3,f9,21,38)) return SUCCESS_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String LoadResult_obj_sStaticFields[] = {
	HX_("SUCCESS",a3,f9,21,38),
	HX_("FAILURE",2a,44,ce,96),
	::String(null())
};

::hx::Class LoadResult_obj::__mClass;

Dynamic __Create_LoadResult_obj() { return new LoadResult_obj; }

void LoadResult_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.util.LoadResult",9d,82,72,56), ::hx::TCanCast< LoadResult_obj >,LoadResult_obj_sStaticFields,0,
	&__Create_LoadResult_obj, &__Create,
	&super::__SGetClass(), &CreateLoadResult_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &LoadResult_obj::__GetStatic;
}

void LoadResult_obj::__boot()
{
}


} // end namespace flixel
} // end namespace util
