// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadMappedInput
#include <flixel/input/gamepad/FlxGamepadMappedInput.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadModel
#include <flixel/input/gamepad/FlxGamepadModel.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad__FlxGamepadMappedInput_FlxGamepadMappedInputTools
#include <flixel/input/gamepad/_FlxGamepadMappedInput/FlxGamepadMappedInputTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_29fa6416fb038805_41_toModel,"flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools","toModel",0xe366eff5,"flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools.toModel","flixel/input/gamepad/FlxGamepadMappedInput.hx",41,0x3934887c)
namespace flixel{
namespace input{
namespace gamepad{
namespace _FlxGamepadMappedInput{

void FlxGamepadMappedInputTools_obj::__construct() { }

Dynamic FlxGamepadMappedInputTools_obj::__CreateEmpty() { return new FlxGamepadMappedInputTools_obj; }

void *FlxGamepadMappedInputTools_obj::_hx_vtable = 0;

Dynamic FlxGamepadMappedInputTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxGamepadMappedInputTools_obj > _hx_result = new FlxGamepadMappedInputTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxGamepadMappedInputTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4572332f;
}

 ::flixel::input::gamepad::FlxGamepadModel FlxGamepadMappedInputTools_obj::toModel( ::flixel::input::gamepad::FlxGamepadMappedInput input){
            	HX_STACKFRAME(&_hx_pos_29fa6416fb038805_41_toModel)
HXDLIN(  41)		switch((int)(input->_hx_getIndex())){
            			case (int)0: {
HXLINE(  46)				int _g = input->_hx_getInt(0);
HXDLIN(  46)				return ::flixel::input::gamepad::FlxGamepadModel_obj::LOGITECH_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  49)				int _g1 = input->_hx_getInt(0);
HXDLIN(  49)				return ::flixel::input::gamepad::FlxGamepadModel_obj::MAYFLASH_WII_REMOTE_dyn();
            			}
            			break;
            			case (int)2: {
HXLINE(  53)				int _g2 = input->_hx_getInt(0);
HXDLIN(  53)				return ::flixel::input::gamepad::FlxGamepadModel_obj::MFI_dyn();
            			}
            			break;
            			case (int)3: {
HXLINE(  43)				int _g3 = input->_hx_getInt(0);
HXDLIN(  43)				return ::flixel::input::gamepad::FlxGamepadModel_obj::OUYA_dyn();
            			}
            			break;
            			case (int)4: {
HXLINE(  44)				int _g4 = input->_hx_getInt(0);
HXDLIN(  44)				return ::flixel::input::gamepad::FlxGamepadModel_obj::PS4_dyn();
            			}
            			break;
            			case (int)5: {
HXLINE(  45)				int _g5 = input->_hx_getInt(0);
HXDLIN(  45)				return ::flixel::input::gamepad::FlxGamepadModel_obj::PSVITA_dyn();
            			}
            			break;
            			case (int)6: {
HXLINE(  51)				int _g6 = input->_hx_getInt(0);
HXDLIN(  51)				return ::flixel::input::gamepad::FlxGamepadModel_obj::SWITCH_JOYCON_LEFT_dyn();
            			}
            			break;
            			case (int)7: {
HXLINE(  52)				int _g7 = input->_hx_getInt(0);
HXDLIN(  52)				return ::flixel::input::gamepad::FlxGamepadModel_obj::SWITCH_JOYCON_RIGHT_dyn();
            			}
            			break;
            			case (int)8: {
HXLINE(  50)				int _g8 = input->_hx_getInt(0);
HXDLIN(  50)				return ::flixel::input::gamepad::FlxGamepadModel_obj::SWITCH_PRO_dyn();
            			}
            			break;
            			case (int)9: {
HXLINE(  48)				int _g9 = input->_hx_getInt(0);
HXDLIN(  48)				return ::flixel::input::gamepad::FlxGamepadModel_obj::WII_REMOTE_dyn();
            			}
            			break;
            			case (int)10: {
HXLINE(  47)				int _g10 = input->_hx_getInt(0);
HXDLIN(  47)				return ::flixel::input::gamepad::FlxGamepadModel_obj::XINPUT_dyn();
            			}
            			break;
            			case (int)11: {
HXLINE(  54)				int _g11 = input->_hx_getInt(0);
HXDLIN(  54)				return ::flixel::input::gamepad::FlxGamepadModel_obj::UNKNOWN_dyn();
            			}
            			break;
            		}
HXLINE(  41)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxGamepadMappedInputTools_obj,toModel,return )


FlxGamepadMappedInputTools_obj::FlxGamepadMappedInputTools_obj()
{
}

bool FlxGamepadMappedInputTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"toModel") ) { outValue = toModel_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxGamepadMappedInputTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxGamepadMappedInputTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class FlxGamepadMappedInputTools_obj::__mClass;

static ::String FlxGamepadMappedInputTools_obj_sStaticFields[] = {
	HX_("toModel",2e,70,dc,d8),
	::String(null())
};

void FlxGamepadMappedInputTools_obj::__register()
{
	FlxGamepadMappedInputTools_obj _hx_dummy;
	FlxGamepadMappedInputTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools",35,41,d6,05);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxGamepadMappedInputTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxGamepadMappedInputTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxGamepadMappedInputTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxGamepadMappedInputTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxGamepadMappedInputTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace _FlxGamepadMappedInput
