// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadAcceptMode
#include <flixel/input/gamepad/FlxGamepadAcceptMode.h>
#endif
namespace flixel{
namespace input{
namespace gamepad{

::flixel::input::gamepad::FlxGamepadAcceptMode FlxGamepadAcceptMode_obj::BOTTOM;

::flixel::input::gamepad::FlxGamepadAcceptMode FlxGamepadAcceptMode_obj::RIGHT;

::flixel::input::gamepad::FlxGamepadAcceptMode FlxGamepadAcceptMode_obj::USE_MAPPING;

bool FlxGamepadAcceptMode_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOTTOM",eb,92,fb,17)) { outValue = FlxGamepadAcceptMode_obj::BOTTOM; return true; }
	if (inName==HX_("RIGHT",bc,43,52,67)) { outValue = FlxGamepadAcceptMode_obj::RIGHT; return true; }
	if (inName==HX_("USE_MAPPING",96,6f,16,fb)) { outValue = FlxGamepadAcceptMode_obj::USE_MAPPING; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FlxGamepadAcceptMode_obj)

int FlxGamepadAcceptMode_obj::__FindIndex(::String inName)
{
	if (inName==HX_("BOTTOM",eb,92,fb,17)) return 0;
	if (inName==HX_("RIGHT",bc,43,52,67)) return 1;
	if (inName==HX_("USE_MAPPING",96,6f,16,fb)) return 2;
	return super::__FindIndex(inName);
}

int FlxGamepadAcceptMode_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("BOTTOM",eb,92,fb,17)) return 0;
	if (inName==HX_("RIGHT",bc,43,52,67)) return 0;
	if (inName==HX_("USE_MAPPING",96,6f,16,fb)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val FlxGamepadAcceptMode_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("BOTTOM",eb,92,fb,17)) return BOTTOM;
	if (inName==HX_("RIGHT",bc,43,52,67)) return RIGHT;
	if (inName==HX_("USE_MAPPING",96,6f,16,fb)) return USE_MAPPING;
	return super::__Field(inName,inCallProp);
}

static ::String FlxGamepadAcceptMode_obj_sStaticFields[] = {
	HX_("BOTTOM",eb,92,fb,17),
	HX_("RIGHT",bc,43,52,67),
	HX_("USE_MAPPING",96,6f,16,fb),
	::String(null())
};

::hx::Class FlxGamepadAcceptMode_obj::__mClass;

Dynamic __Create_FlxGamepadAcceptMode_obj() { return new FlxGamepadAcceptMode_obj; }

void FlxGamepadAcceptMode_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.input.gamepad.FlxGamepadAcceptMode",7d,48,54,c7), ::hx::TCanCast< FlxGamepadAcceptMode_obj >,FlxGamepadAcceptMode_obj_sStaticFields,0,
	&__Create_FlxGamepadAcceptMode_obj, &__Create,
	&super::__SGetClass(), &CreateFlxGamepadAcceptMode_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FlxGamepadAcceptMode_obj::__GetStatic;
}

void FlxGamepadAcceptMode_obj::__boot()
{
BOTTOM = ::hx::CreateConstEnum< FlxGamepadAcceptMode_obj >(HX_("BOTTOM",eb,92,fb,17),0);
RIGHT = ::hx::CreateConstEnum< FlxGamepadAcceptMode_obj >(HX_("RIGHT",bc,43,52,67),1);
USE_MAPPING = ::hx::CreateConstEnum< FlxGamepadAcceptMode_obj >(HX_("USE_MAPPING",96,6f,16,fb),2);
}


} // end namespace flixel
} // end namespace input
} // end namespace gamepad
