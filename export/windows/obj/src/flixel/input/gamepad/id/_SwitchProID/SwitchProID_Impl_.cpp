// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxTypedGamepadAnalogStick
#include <flixel/input/gamepad/FlxTypedGamepadAnalogStick.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_id__SwitchProID_SwitchProID_Impl_
#include <flixel/input/gamepad/id/_SwitchProID/SwitchProID_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_53_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",53,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_54_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",54,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_55_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",55,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_56_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",56,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_57_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",57,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_58_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",58,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_59_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",59,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_60_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",60,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_61_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",61,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_62_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",62,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_63_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",63,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_64_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",64,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_65_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",65,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_66_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",66,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_67_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",67,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_68_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",68,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_69_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",69,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_70_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",70,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_72_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",72,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_73_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",73,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_74_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",74,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_75_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",75,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_77_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",77,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_78_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",78,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_79_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",79,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_80_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",80,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_83_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",83,0xcca574f8)
HX_LOCAL_STACK_FRAME(_hx_pos_0210eb462e960c34_89_boot,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_","boot",0xa753aeb5,"flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_.boot","flixel/input/gamepad/id/SwitchProID.hx",89,0xcca574f8)
namespace flixel{
namespace input{
namespace gamepad{
namespace id{
namespace _SwitchProID{

void SwitchProID_Impl__obj::__construct() { }

Dynamic SwitchProID_Impl__obj::__CreateEmpty() { return new SwitchProID_Impl__obj; }

void *SwitchProID_Impl__obj::_hx_vtable = 0;

Dynamic SwitchProID_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SwitchProID_Impl__obj > _hx_result = new SwitchProID_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SwitchProID_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3eed40f1;
}

int SwitchProID_Impl__obj::ZL;

int SwitchProID_Impl__obj::ZR;

int SwitchProID_Impl__obj::B;

int SwitchProID_Impl__obj::A;

int SwitchProID_Impl__obj::Y;

int SwitchProID_Impl__obj::X;

int SwitchProID_Impl__obj::MINUS;

int SwitchProID_Impl__obj::HOME;

int SwitchProID_Impl__obj::PLUS;

int SwitchProID_Impl__obj::LEFT_STICK_CLICK;

int SwitchProID_Impl__obj::RIGHT_STICK_CLICK;

int SwitchProID_Impl__obj::L;

int SwitchProID_Impl__obj::R;

int SwitchProID_Impl__obj::DPAD_UP;

int SwitchProID_Impl__obj::DPAD_DOWN;

int SwitchProID_Impl__obj::DPAD_LEFT;

int SwitchProID_Impl__obj::DPAD_RIGHT;

int SwitchProID_Impl__obj::CAPTURE;

int SwitchProID_Impl__obj::LEFT_STICK_UP;

int SwitchProID_Impl__obj::LEFT_STICK_DOWN;

int SwitchProID_Impl__obj::LEFT_STICK_LEFT;

int SwitchProID_Impl__obj::LEFT_STICK_RIGHT;

int SwitchProID_Impl__obj::RIGHT_STICK_UP;

int SwitchProID_Impl__obj::RIGHT_STICK_DOWN;

int SwitchProID_Impl__obj::RIGHT_STICK_LEFT;

int SwitchProID_Impl__obj::RIGHT_STICK_RIGHT;

 ::flixel::input::gamepad::FlxTypedGamepadAnalogStick SwitchProID_Impl__obj::LEFT_ANALOG_STICK;

 ::flixel::input::gamepad::FlxTypedGamepadAnalogStick SwitchProID_Impl__obj::RIGHT_ANALOG_STICK;


SwitchProID_Impl__obj::SwitchProID_Impl__obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SwitchProID_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo SwitchProID_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::ZL,HX_("ZL",b2,4e,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::ZR,HX_("ZR",b8,4e,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::B,HX_("B",42,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::A,HX_("A",41,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::Y,HX_("Y",59,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::X,HX_("X",58,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::MINUS,HX_("MINUS",50,b8,56,86)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::HOME,HX_("HOME",1f,92,d3,2f)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::PLUS,HX_("PLUS",5a,07,1b,35)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::LEFT_STICK_CLICK,HX_("LEFT_STICK_CLICK",21,9d,4a,bf)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::RIGHT_STICK_CLICK,HX_("RIGHT_STICK_CLICK",56,4c,25,0b)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::L,HX_("L",4c,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::R,HX_("R",52,00,00,00)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::DPAD_UP,HX_("DPAD_UP",6b,00,87,a2)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::DPAD_DOWN,HX_("DPAD_DOWN",72,1a,5b,87)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::DPAD_LEFT,HX_("DPAD_LEFT",17,2a,9d,8c)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::DPAD_RIGHT,HX_("DPAD_RIGHT",ac,b7,f4,f3)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::CAPTURE,HX_("CAPTURE",66,a4,25,27)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::LEFT_STICK_UP,HX_("LEFT_STICK_UP",c2,fb,bb,30)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::LEFT_STICK_DOWN,HX_("LEFT_STICK_DOWN",89,d9,46,c9)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::LEFT_STICK_LEFT,HX_("LEFT_STICK_LEFT",2e,e9,88,ce)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::LEFT_STICK_RIGHT,HX_("LEFT_STICK_RIGHT",b5,2c,50,60)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::RIGHT_STICK_UP,HX_("RIGHT_STICK_UP",6d,e9,3a,40)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::RIGHT_STICK_DOWN,HX_("RIGHT_STICK_DOWN",f4,c7,9c,e8)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::RIGHT_STICK_LEFT,HX_("RIGHT_STICK_LEFT",99,d7,de,ed)},
	{::hx::fsInt,(void *) &SwitchProID_Impl__obj::RIGHT_STICK_RIGHT,HX_("RIGHT_STICK_RIGHT",ea,db,2a,ac)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick */ ,(void *) &SwitchProID_Impl__obj::LEFT_ANALOG_STICK,HX_("LEFT_ANALOG_STICK",19,49,58,a5)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick */ ,(void *) &SwitchProID_Impl__obj::RIGHT_ANALOG_STICK,HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void SwitchProID_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::ZL,"ZL");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::ZR,"ZR");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::B,"B");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::A,"A");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::Y,"Y");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::X,"X");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::MINUS,"MINUS");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::HOME,"HOME");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::PLUS,"PLUS");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::L,"L");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::R,"R");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_UP,"DPAD_UP");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_DOWN,"DPAD_DOWN");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_LEFT,"DPAD_LEFT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::CAPTURE,"CAPTURE");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_UP,"LEFT_STICK_UP");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_DOWN,"LEFT_STICK_DOWN");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_LEFT,"LEFT_STICK_LEFT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_RIGHT,"LEFT_STICK_RIGHT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_UP,"RIGHT_STICK_UP");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_DOWN,"RIGHT_STICK_DOWN");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_LEFT,"RIGHT_STICK_LEFT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_RIGHT,"RIGHT_STICK_RIGHT");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_MARK_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SwitchProID_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::ZL,"ZL");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::ZR,"ZR");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::B,"B");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::A,"A");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::X,"X");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::MINUS,"MINUS");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::HOME,"HOME");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::PLUS,"PLUS");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::L,"L");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::R,"R");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_UP,"DPAD_UP");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_DOWN,"DPAD_DOWN");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_LEFT,"DPAD_LEFT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::CAPTURE,"CAPTURE");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_UP,"LEFT_STICK_UP");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_DOWN,"LEFT_STICK_DOWN");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_LEFT,"LEFT_STICK_LEFT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_STICK_RIGHT,"LEFT_STICK_RIGHT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_UP,"RIGHT_STICK_UP");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_DOWN,"RIGHT_STICK_DOWN");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_LEFT,"RIGHT_STICK_LEFT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_STICK_RIGHT,"RIGHT_STICK_RIGHT");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_VISIT_MEMBER_NAME(SwitchProID_Impl__obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#endif

::hx::Class SwitchProID_Impl__obj::__mClass;

static ::String SwitchProID_Impl__obj_sStaticFields[] = {
	HX_("ZL",b2,4e,00,00),
	HX_("ZR",b8,4e,00,00),
	HX_("B",42,00,00,00),
	HX_("A",41,00,00,00),
	HX_("Y",59,00,00,00),
	HX_("X",58,00,00,00),
	HX_("MINUS",50,b8,56,86),
	HX_("HOME",1f,92,d3,2f),
	HX_("PLUS",5a,07,1b,35),
	HX_("LEFT_STICK_CLICK",21,9d,4a,bf),
	HX_("RIGHT_STICK_CLICK",56,4c,25,0b),
	HX_("L",4c,00,00,00),
	HX_("R",52,00,00,00),
	HX_("DPAD_UP",6b,00,87,a2),
	HX_("DPAD_DOWN",72,1a,5b,87),
	HX_("DPAD_LEFT",17,2a,9d,8c),
	HX_("DPAD_RIGHT",ac,b7,f4,f3),
	HX_("CAPTURE",66,a4,25,27),
	HX_("LEFT_STICK_UP",c2,fb,bb,30),
	HX_("LEFT_STICK_DOWN",89,d9,46,c9),
	HX_("LEFT_STICK_LEFT",2e,e9,88,ce),
	HX_("LEFT_STICK_RIGHT",b5,2c,50,60),
	HX_("RIGHT_STICK_UP",6d,e9,3a,40),
	HX_("RIGHT_STICK_DOWN",f4,c7,9c,e8),
	HX_("RIGHT_STICK_LEFT",99,d7,de,ed),
	HX_("RIGHT_STICK_RIGHT",ea,db,2a,ac),
	HX_("LEFT_ANALOG_STICK",19,49,58,a5),
	HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8),
	::String(null())
};

void SwitchProID_Impl__obj::__register()
{
	SwitchProID_Impl__obj _hx_dummy;
	SwitchProID_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.input.gamepad.id._SwitchProID.SwitchProID_Impl_",cb,44,f2,77);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SwitchProID_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SwitchProID_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SwitchProID_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SwitchProID_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SwitchProID_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SwitchProID_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void SwitchProID_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_53_boot)
HXDLIN(  53)		ZL = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_54_boot)
HXDLIN(  54)		ZR = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_55_boot)
HXDLIN(  55)		B = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_56_boot)
HXDLIN(  56)		A = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_57_boot)
HXDLIN(  57)		Y = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_58_boot)
HXDLIN(  58)		X = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_59_boot)
HXDLIN(  59)		MINUS = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_60_boot)
HXDLIN(  60)		HOME = 11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_61_boot)
HXDLIN(  61)		PLUS = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_62_boot)
HXDLIN(  62)		LEFT_STICK_CLICK = 13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_63_boot)
HXDLIN(  63)		RIGHT_STICK_CLICK = 14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_64_boot)
HXDLIN(  64)		L = 15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_65_boot)
HXDLIN(  65)		R = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_66_boot)
HXDLIN(  66)		DPAD_UP = 17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_67_boot)
HXDLIN(  67)		DPAD_DOWN = 18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_68_boot)
HXDLIN(  68)		DPAD_LEFT = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_69_boot)
HXDLIN(  69)		DPAD_RIGHT = 20;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_70_boot)
HXDLIN(  70)		CAPTURE = 21;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_72_boot)
HXDLIN(  72)		LEFT_STICK_UP = 22;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_73_boot)
HXDLIN(  73)		LEFT_STICK_DOWN = 23;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_74_boot)
HXDLIN(  74)		LEFT_STICK_LEFT = 24;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_75_boot)
HXDLIN(  75)		LEFT_STICK_RIGHT = 25;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_77_boot)
HXDLIN(  77)		RIGHT_STICK_UP = 26;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_78_boot)
HXDLIN(  78)		RIGHT_STICK_DOWN = 27;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_79_boot)
HXDLIN(  79)		RIGHT_STICK_LEFT = 28;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0210eb462e960c34_80_boot)
HXDLIN(  80)		RIGHT_STICK_RIGHT = 29;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_0210eb462e960c34_83_boot)
HXDLIN(  83)		LEFT_ANALOG_STICK =  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick_obj::__alloc( HX_CTX ,0,1, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),25)
            			->setFixed(1,HX_("up",5b,66,00,00),22)
            			->setFixed(2,HX_("down",62,f8,6d,42),23)
            			->setFixed(3,HX_("left",07,08,b0,47),24)));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_0210eb462e960c34_89_boot)
HXDLIN(  89)		RIGHT_ANALOG_STICK =  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick_obj::__alloc( HX_CTX ,2,3, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),29)
            			->setFixed(1,HX_("up",5b,66,00,00),26)
            			->setFixed(2,HX_("down",62,f8,6d,42),27)
            			->setFixed(3,HX_("left",07,08,b0,47),28)));
            	}
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id
} // end namespace _SwitchProID
