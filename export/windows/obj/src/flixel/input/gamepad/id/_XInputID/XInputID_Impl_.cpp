// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_input_gamepad_FlxTypedGamepadAnalogStick
#include <flixel/input/gamepad/FlxTypedGamepadAnalogStick.h>
#endif
#ifndef INCLUDED_flixel_input_gamepad_id__XInputID_XInputID_Impl_
#include <flixel/input/gamepad/id/_XInputID/XInputID_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_64_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",64,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_65_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",65,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_66_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",66,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_67_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",67,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_69_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",69,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_70_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",70,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_71_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",71,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_73_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",73,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_74_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",74,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_76_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",76,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_77_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",77,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_79_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",79,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_80_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",80,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_81_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",81,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_82_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",82,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_84_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",84,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_85_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",85,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_86_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",86,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_87_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",87,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_89_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",89,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_90_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",90,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_91_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",91,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_92_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",92,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_94_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",94,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_95_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",95,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_96_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",96,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_97_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",97,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_99_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",99,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_100_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",100,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_190_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",190,0x9958eee3)
HX_LOCAL_STACK_FRAME(_hx_pos_5e198289fa15ed68_197_boot,"flixel.input.gamepad.id._XInputID.XInputID_Impl_","boot",0x5a842f21,"flixel.input.gamepad.id._XInputID.XInputID_Impl_.boot","flixel/input/gamepad/id/XInputID.hx",197,0x9958eee3)
namespace flixel{
namespace input{
namespace gamepad{
namespace id{
namespace _XInputID{

void XInputID_Impl__obj::__construct() { }

Dynamic XInputID_Impl__obj::__CreateEmpty() { return new XInputID_Impl__obj; }

void *XInputID_Impl__obj::_hx_vtable = 0;

Dynamic XInputID_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< XInputID_Impl__obj > _hx_result = new XInputID_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool XInputID_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x36aa5bcb;
}

int XInputID_Impl__obj::A;

int XInputID_Impl__obj::B;

int XInputID_Impl__obj::X;

int XInputID_Impl__obj::Y;

int XInputID_Impl__obj::BACK;

int XInputID_Impl__obj::GUIDE;

int XInputID_Impl__obj::START;

int XInputID_Impl__obj::LEFT_STICK_CLICK;

int XInputID_Impl__obj::RIGHT_STICK_CLICK;

int XInputID_Impl__obj::LB;

int XInputID_Impl__obj::RB;

int XInputID_Impl__obj::DPAD_UP;

int XInputID_Impl__obj::DPAD_DOWN;

int XInputID_Impl__obj::DPAD_LEFT;

int XInputID_Impl__obj::DPAD_RIGHT;

int XInputID_Impl__obj::LEFT_X;

int XInputID_Impl__obj::LEFT_Y;

int XInputID_Impl__obj::RIGHT_X;

int XInputID_Impl__obj::RIGHT_Y;

int XInputID_Impl__obj::LEFT_STICK_UP;

int XInputID_Impl__obj::LEFT_STICK_DOWN;

int XInputID_Impl__obj::LEFT_STICK_LEFT;

int XInputID_Impl__obj::LEFT_STICK_RIGHT;

int XInputID_Impl__obj::RIGHT_STICK_UP;

int XInputID_Impl__obj::RIGHT_STICK_DOWN;

int XInputID_Impl__obj::RIGHT_STICK_LEFT;

int XInputID_Impl__obj::RIGHT_STICK_RIGHT;

int XInputID_Impl__obj::LEFT_TRIGGER;

int XInputID_Impl__obj::RIGHT_TRIGGER;

 ::flixel::input::gamepad::FlxTypedGamepadAnalogStick XInputID_Impl__obj::LEFT_ANALOG_STICK;

 ::flixel::input::gamepad::FlxTypedGamepadAnalogStick XInputID_Impl__obj::RIGHT_ANALOG_STICK;


XInputID_Impl__obj::XInputID_Impl__obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *XInputID_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo XInputID_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &XInputID_Impl__obj::A,HX_("A",41,00,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::B,HX_("B",42,00,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::X,HX_("X",58,00,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::Y,HX_("Y",59,00,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::BACK,HX_("BACK",27,a2,d1,2b)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::GUIDE,HX_("GUIDE",9c,f2,d9,19)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::START,HX_("START",42,ac,f9,01)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_STICK_CLICK,HX_("LEFT_STICK_CLICK",21,9d,4a,bf)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_STICK_CLICK,HX_("RIGHT_STICK_CLICK",56,4c,25,0b)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LB,HX_("LB",76,42,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RB,HX_("RB",b0,47,00,00)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::DPAD_UP,HX_("DPAD_UP",6b,00,87,a2)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::DPAD_DOWN,HX_("DPAD_DOWN",72,1a,5b,87)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::DPAD_LEFT,HX_("DPAD_LEFT",17,2a,9d,8c)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::DPAD_RIGHT,HX_("DPAD_RIGHT",ac,b7,f4,f3)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_X,HX_("LEFT_X",e0,72,4a,4c)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_Y,HX_("LEFT_Y",e1,72,4a,4c)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_X,HX_("RIGHT_X",d5,fd,37,93)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_Y,HX_("RIGHT_Y",d6,fd,37,93)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_STICK_UP,HX_("LEFT_STICK_UP",c2,fb,bb,30)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_STICK_DOWN,HX_("LEFT_STICK_DOWN",89,d9,46,c9)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_STICK_LEFT,HX_("LEFT_STICK_LEFT",2e,e9,88,ce)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_STICK_RIGHT,HX_("LEFT_STICK_RIGHT",b5,2c,50,60)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_STICK_UP,HX_("RIGHT_STICK_UP",6d,e9,3a,40)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_STICK_DOWN,HX_("RIGHT_STICK_DOWN",f4,c7,9c,e8)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_STICK_LEFT,HX_("RIGHT_STICK_LEFT",99,d7,de,ed)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_STICK_RIGHT,HX_("RIGHT_STICK_RIGHT",ea,db,2a,ac)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::LEFT_TRIGGER,HX_("LEFT_TRIGGER",a0,31,c6,eb)},
	{::hx::fsInt,(void *) &XInputID_Impl__obj::RIGHT_TRIGGER,HX_("RIGHT_TRIGGER",55,e2,81,00)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick */ ,(void *) &XInputID_Impl__obj::LEFT_ANALOG_STICK,HX_("LEFT_ANALOG_STICK",19,49,58,a5)},
	{::hx::fsObject /*  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick */ ,(void *) &XInputID_Impl__obj::RIGHT_ANALOG_STICK,HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void XInputID_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::A,"A");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::B,"B");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::X,"X");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::Y,"Y");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::BACK,"BACK");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::GUIDE,"GUIDE");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::START,"START");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LB,"LB");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RB,"RB");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::DPAD_UP,"DPAD_UP");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::DPAD_DOWN,"DPAD_DOWN");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::DPAD_LEFT,"DPAD_LEFT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_X,"LEFT_X");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_Y,"LEFT_Y");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_X,"RIGHT_X");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_Y,"RIGHT_Y");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_UP,"LEFT_STICK_UP");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_DOWN,"LEFT_STICK_DOWN");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_LEFT,"LEFT_STICK_LEFT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_RIGHT,"LEFT_STICK_RIGHT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_UP,"RIGHT_STICK_UP");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_DOWN,"RIGHT_STICK_DOWN");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_LEFT,"RIGHT_STICK_LEFT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_RIGHT,"RIGHT_STICK_RIGHT");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_TRIGGER,"LEFT_TRIGGER");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_TRIGGER,"RIGHT_TRIGGER");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_MARK_MEMBER_NAME(XInputID_Impl__obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#ifdef HXCPP_VISIT_ALLOCS
static void XInputID_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::A,"A");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::B,"B");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::X,"X");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::BACK,"BACK");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::GUIDE,"GUIDE");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::START,"START");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_CLICK,"LEFT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_CLICK,"RIGHT_STICK_CLICK");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LB,"LB");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RB,"RB");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::DPAD_UP,"DPAD_UP");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::DPAD_DOWN,"DPAD_DOWN");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::DPAD_LEFT,"DPAD_LEFT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::DPAD_RIGHT,"DPAD_RIGHT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_X,"LEFT_X");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_Y,"LEFT_Y");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_X,"RIGHT_X");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_Y,"RIGHT_Y");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_UP,"LEFT_STICK_UP");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_DOWN,"LEFT_STICK_DOWN");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_LEFT,"LEFT_STICK_LEFT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_STICK_RIGHT,"LEFT_STICK_RIGHT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_UP,"RIGHT_STICK_UP");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_DOWN,"RIGHT_STICK_DOWN");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_LEFT,"RIGHT_STICK_LEFT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_STICK_RIGHT,"RIGHT_STICK_RIGHT");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_TRIGGER,"LEFT_TRIGGER");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_TRIGGER,"RIGHT_TRIGGER");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::LEFT_ANALOG_STICK,"LEFT_ANALOG_STICK");
	HX_VISIT_MEMBER_NAME(XInputID_Impl__obj::RIGHT_ANALOG_STICK,"RIGHT_ANALOG_STICK");
};

#endif

::hx::Class XInputID_Impl__obj::__mClass;

static ::String XInputID_Impl__obj_sStaticFields[] = {
	HX_("A",41,00,00,00),
	HX_("B",42,00,00,00),
	HX_("X",58,00,00,00),
	HX_("Y",59,00,00,00),
	HX_("BACK",27,a2,d1,2b),
	HX_("GUIDE",9c,f2,d9,19),
	HX_("START",42,ac,f9,01),
	HX_("LEFT_STICK_CLICK",21,9d,4a,bf),
	HX_("RIGHT_STICK_CLICK",56,4c,25,0b),
	HX_("LB",76,42,00,00),
	HX_("RB",b0,47,00,00),
	HX_("DPAD_UP",6b,00,87,a2),
	HX_("DPAD_DOWN",72,1a,5b,87),
	HX_("DPAD_LEFT",17,2a,9d,8c),
	HX_("DPAD_RIGHT",ac,b7,f4,f3),
	HX_("LEFT_X",e0,72,4a,4c),
	HX_("LEFT_Y",e1,72,4a,4c),
	HX_("RIGHT_X",d5,fd,37,93),
	HX_("RIGHT_Y",d6,fd,37,93),
	HX_("LEFT_STICK_UP",c2,fb,bb,30),
	HX_("LEFT_STICK_DOWN",89,d9,46,c9),
	HX_("LEFT_STICK_LEFT",2e,e9,88,ce),
	HX_("LEFT_STICK_RIGHT",b5,2c,50,60),
	HX_("RIGHT_STICK_UP",6d,e9,3a,40),
	HX_("RIGHT_STICK_DOWN",f4,c7,9c,e8),
	HX_("RIGHT_STICK_LEFT",99,d7,de,ed),
	HX_("RIGHT_STICK_RIGHT",ea,db,2a,ac),
	HX_("LEFT_TRIGGER",a0,31,c6,eb),
	HX_("RIGHT_TRIGGER",55,e2,81,00),
	HX_("LEFT_ANALOG_STICK",19,49,58,a5),
	HX_("RIGHT_ANALOG_STICK",44,e8,d6,b8),
	::String(null())
};

void XInputID_Impl__obj::__register()
{
	XInputID_Impl__obj _hx_dummy;
	XInputID_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.input.gamepad.id._XInputID.XInputID_Impl_",df,9b,e9,f0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = XInputID_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(XInputID_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< XInputID_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = XInputID_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = XInputID_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = XInputID_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void XInputID_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_64_boot)
HXDLIN(  64)		A = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_65_boot)
HXDLIN(  65)		B = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_66_boot)
HXDLIN(  66)		X = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_67_boot)
HXDLIN(  67)		Y = 9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_69_boot)
HXDLIN(  69)		BACK = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_70_boot)
HXDLIN(  70)		GUIDE = -1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_71_boot)
HXDLIN(  71)		START = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_73_boot)
HXDLIN(  73)		LEFT_STICK_CLICK = 13;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_74_boot)
HXDLIN(  74)		RIGHT_STICK_CLICK = 14;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_76_boot)
HXDLIN(  76)		LB = 15;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_77_boot)
HXDLIN(  77)		RB = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_79_boot)
HXDLIN(  79)		DPAD_UP = 17;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_80_boot)
HXDLIN(  80)		DPAD_DOWN = 18;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_81_boot)
HXDLIN(  81)		DPAD_LEFT = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_82_boot)
HXDLIN(  82)		DPAD_RIGHT = 20;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_84_boot)
HXDLIN(  84)		LEFT_X = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_85_boot)
HXDLIN(  85)		LEFT_Y = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_86_boot)
HXDLIN(  86)		RIGHT_X = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_87_boot)
HXDLIN(  87)		RIGHT_Y = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_89_boot)
HXDLIN(  89)		LEFT_STICK_UP = 21;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_90_boot)
HXDLIN(  90)		LEFT_STICK_DOWN = 22;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_91_boot)
HXDLIN(  91)		LEFT_STICK_LEFT = 23;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_92_boot)
HXDLIN(  92)		LEFT_STICK_RIGHT = 24;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_94_boot)
HXDLIN(  94)		RIGHT_STICK_UP = 25;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_95_boot)
HXDLIN(  95)		RIGHT_STICK_DOWN = 26;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_96_boot)
HXDLIN(  96)		RIGHT_STICK_LEFT = 27;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_97_boot)
HXDLIN(  97)		RIGHT_STICK_RIGHT = 28;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_99_boot)
HXDLIN(  99)		LEFT_TRIGGER = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e198289fa15ed68_100_boot)
HXDLIN( 100)		RIGHT_TRIGGER = 5;
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e198289fa15ed68_190_boot)
HXDLIN( 190)		LEFT_ANALOG_STICK =  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick_obj::__alloc( HX_CTX ,0,1, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),24)
            			->setFixed(1,HX_("up",5b,66,00,00),21)
            			->setFixed(2,HX_("down",62,f8,6d,42),22)
            			->setFixed(3,HX_("left",07,08,b0,47),23)));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e198289fa15ed68_197_boot)
HXDLIN( 197)		RIGHT_ANALOG_STICK =  ::flixel::input::gamepad::FlxTypedGamepadAnalogStick_obj::__alloc( HX_CTX ,2,3, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("right",dc,0b,64,e9),28)
            			->setFixed(1,HX_("up",5b,66,00,00),25)
            			->setFixed(2,HX_("down",62,f8,6d,42),26)
            			->setFixed(3,HX_("left",07,08,b0,47),27)));
            	}
}

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id
} // end namespace _XInputID
