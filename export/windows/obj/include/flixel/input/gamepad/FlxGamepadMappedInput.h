// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadMappedInput
#define INCLUDED_flixel_input_gamepad_FlxGamepadMappedInput

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadMappedInput)
namespace flixel{
namespace input{
namespace gamepad{


class FlxGamepadMappedInput_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxGamepadMappedInput_obj OBJ_;

	public:
		FlxGamepadMappedInput_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.input.gamepad.FlxGamepadMappedInput",25,39,54,da); }
		::String __ToString() const { return HX_("FlxGamepadMappedInput.",06,a6,ff,2c) + _hx_tag; }

		static ::flixel::input::gamepad::FlxGamepadMappedInput LOGITECH(int id);
		static ::Dynamic LOGITECH_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput MAYFLASH_WII(int id);
		static ::Dynamic MAYFLASH_WII_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput MFI(int id);
		static ::Dynamic MFI_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput OUYA(int id);
		static ::Dynamic OUYA_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput PS4(int id);
		static ::Dynamic PS4_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput PS_VITA(int id);
		static ::Dynamic PS_VITA_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput SWITCH_JOYCON_LEFT(int id);
		static ::Dynamic SWITCH_JOYCON_LEFT_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput SWITCH_JOYCON_RIGHT(int id);
		static ::Dynamic SWITCH_JOYCON_RIGHT_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput SWITCH_PRO(int id);
		static ::Dynamic SWITCH_PRO_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput UNKNOWN(int id);
		static ::Dynamic UNKNOWN_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput WII(int id);
		static ::Dynamic WII_dyn();
		static ::flixel::input::gamepad::FlxGamepadMappedInput X_INPUT(int id);
		static ::Dynamic X_INPUT_dyn();
};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad

#endif /* INCLUDED_flixel_input_gamepad_FlxGamepadMappedInput */ 
