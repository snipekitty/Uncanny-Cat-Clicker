// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_input_gamepad_FlxGamepadAcceptMode
#define INCLUDED_flixel_input_gamepad_FlxGamepadAcceptMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadAcceptMode)
namespace flixel{
namespace input{
namespace gamepad{


class FlxGamepadAcceptMode_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxGamepadAcceptMode_obj OBJ_;

	public:
		FlxGamepadAcceptMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.input.gamepad.FlxGamepadAcceptMode",7d,48,54,c7); }
		::String __ToString() const { return HX_("FlxGamepadAcceptMode.",14,c9,b8,28) + _hx_tag; }

		static ::flixel::input::gamepad::FlxGamepadAcceptMode BOTTOM;
		static inline ::flixel::input::gamepad::FlxGamepadAcceptMode BOTTOM_dyn() { return BOTTOM; }
		static ::flixel::input::gamepad::FlxGamepadAcceptMode RIGHT;
		static inline ::flixel::input::gamepad::FlxGamepadAcceptMode RIGHT_dyn() { return RIGHT; }
		static ::flixel::input::gamepad::FlxGamepadAcceptMode USE_MAPPING;
		static inline ::flixel::input::gamepad::FlxGamepadAcceptMode USE_MAPPING_dyn() { return USE_MAPPING; }
};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad

#endif /* INCLUDED_flixel_input_gamepad_FlxGamepadAcceptMode */ 
