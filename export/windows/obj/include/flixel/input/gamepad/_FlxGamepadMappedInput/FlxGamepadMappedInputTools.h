// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_input_gamepad__FlxGamepadMappedInput_FlxGamepadMappedInputTools
#define INCLUDED_flixel_input_gamepad__FlxGamepadMappedInput_FlxGamepadMappedInputTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadMappedInput)
HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadModel)
HX_DECLARE_CLASS4(flixel,input,gamepad,_FlxGamepadMappedInput,FlxGamepadMappedInputTools)

namespace flixel{
namespace input{
namespace gamepad{
namespace _FlxGamepadMappedInput{


class HXCPP_CLASS_ATTRIBUTES FlxGamepadMappedInputTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxGamepadMappedInputTools_obj OBJ_;
		FlxGamepadMappedInputTools_obj();

	public:
		enum { _hx_ClassId = 0x4572332f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools"); }

		inline static ::hx::ObjectPtr< FlxGamepadMappedInputTools_obj > __new() {
			::hx::ObjectPtr< FlxGamepadMappedInputTools_obj > __this = new FlxGamepadMappedInputTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxGamepadMappedInputTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxGamepadMappedInputTools_obj *__this = (FlxGamepadMappedInputTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxGamepadMappedInputTools_obj), false, "flixel.input.gamepad._FlxGamepadMappedInput.FlxGamepadMappedInputTools"));
			*(void **)__this = FlxGamepadMappedInputTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxGamepadMappedInputTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxGamepadMappedInputTools",d3,73,1f,3c); }

		static  ::flixel::input::gamepad::FlxGamepadModel toModel( ::flixel::input::gamepad::FlxGamepadMappedInput input);
		static ::Dynamic toModel_dyn();

};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace _FlxGamepadMappedInput

#endif /* INCLUDED_flixel_input_gamepad__FlxGamepadMappedInput_FlxGamepadMappedInputTools */ 
