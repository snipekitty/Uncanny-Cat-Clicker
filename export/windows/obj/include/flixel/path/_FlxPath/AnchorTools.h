// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_path__FlxPath_AnchorTools
#define INCLUDED_flixel_path__FlxPath_AnchorTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS2(flixel,math,FlxBasePoint)
HX_DECLARE_CLASS2(flixel,path,FlxPathAnchorMode)
HX_DECLARE_CLASS3(flixel,path,_FlxPath,AnchorTools)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)

namespace flixel{
namespace path{
namespace _FlxPath{


class HXCPP_CLASS_ATTRIBUTES AnchorTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef AnchorTools_obj OBJ_;
		AnchorTools_obj();

	public:
		enum { _hx_ClassId = 0x6b37f4e9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.path._FlxPath.AnchorTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.path._FlxPath.AnchorTools"); }

		inline static ::hx::ObjectPtr< AnchorTools_obj > __new() {
			::hx::ObjectPtr< AnchorTools_obj > __this = new AnchorTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< AnchorTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			AnchorTools_obj *__this = (AnchorTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AnchorTools_obj), false, "flixel.path._FlxPath.AnchorTools"));
			*(void **)__this = AnchorTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~AnchorTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("AnchorTools",46,57,2c,6c); }

		static  ::flixel::math::FlxBasePoint computeAnchor( ::flixel::path::FlxPathAnchorMode mode, ::flixel::FlxObject object, ::flixel::math::FlxBasePoint result);
		static ::Dynamic computeAnchor_dyn();

		static  ::flixel::math::FlxBasePoint computeAnchorOffset( ::flixel::path::FlxPathAnchorMode mode, ::flixel::FlxObject object, ::flixel::math::FlxBasePoint result);
		static ::Dynamic computeAnchorOffset_dyn();

};

} // end namespace flixel
} // end namespace path
} // end namespace _FlxPath

#endif /* INCLUDED_flixel_path__FlxPath_AnchorTools */ 
