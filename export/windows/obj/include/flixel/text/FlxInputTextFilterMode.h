// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_text_FlxInputTextFilterMode
#define INCLUDED_flixel_text_FlxInputTextFilterMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(EReg)
HX_DECLARE_CLASS2(flixel,text,FlxInputTextFilterMode)
namespace flixel{
namespace text{


class FlxInputTextFilterMode_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxInputTextFilterMode_obj OBJ_;

	public:
		FlxInputTextFilterMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.text.FlxInputTextFilterMode",4f,f9,78,30); }
		::String __ToString() const { return HX_("FlxInputTextFilterMode.",6e,f5,b5,7a) + _hx_tag; }

		static ::flixel::text::FlxInputTextFilterMode ALPHABET;
		static inline ::flixel::text::FlxInputTextFilterMode ALPHABET_dyn() { return ALPHABET; }
		static ::flixel::text::FlxInputTextFilterMode ALPHANUMERIC;
		static inline ::flixel::text::FlxInputTextFilterMode ALPHANUMERIC_dyn() { return ALPHANUMERIC; }
		static ::flixel::text::FlxInputTextFilterMode CHARS(::String chars);
		static ::Dynamic CHARS_dyn();
		static ::flixel::text::FlxInputTextFilterMode NONE;
		static inline ::flixel::text::FlxInputTextFilterMode NONE_dyn() { return NONE; }
		static ::flixel::text::FlxInputTextFilterMode NUMERIC;
		static inline ::flixel::text::FlxInputTextFilterMode NUMERIC_dyn() { return NUMERIC; }
		static ::flixel::text::FlxInputTextFilterMode REG( ::EReg reg);
		static ::Dynamic REG_dyn();
};

} // end namespace flixel
} // end namespace text

#endif /* INCLUDED_flixel_text_FlxInputTextFilterMode */ 
